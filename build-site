#! /usr/bin/env bash

if [ ! -z "$(git status --porcelain)" ]; then
  echo 'the repo is unclean, bailing out'
  exit 1
fi

if [ 'main' != "$(git branch --show-current)" ]; then
  echo 'not on main, bailing out'
  exit 1
fi

while read -r branch; do
  if [ 'gh-pages' == "${branch}" ]; then
    echo 'gh-pages branch exists locally, bailing out'
    exit 1
  fi
done < <(git branch --format='%(refname:short)')

if [ -z "$(git ls-remote origin gh-pages)" ]; then
  echo 'remote gh-pages branch does not exist, bailing out'
  exit 1
fi

git fetch origin

find ./gh-pages -type d | while read DIR; do
  (
    echo -e "<html>\n<body>\n<h1>Toofab Schemas</h1>\n<hr/>\n<pre>"
    ls -1pa "${DIR}" | egrep "(../|json)" | grep -v "^\./$" | grep -v "index.html" | awk '{ printf "<a href=\"%s\">%s</a>\n",$1,$1 }'
    echo -e "</pre>\n</body>\n</html>"
  ) > "${DIR}/index.html"
done

staging_area=$(mktemp -d)
mv ./gh-pages/* "${staging_area}"

git checkout -- .
git clean -fd

git switch gh-pages
find . -maxdepth 1 ! -name '.git' ! -name '.gitignore' -exec rm -rf {} \;
mv "${staging_area}"/* ./

git add -A
git commit -m "gh-pages"
git push origin gh-pages
git checkout main
git branch -D gh-pages
